version: '3'

services:
  # DATABASE
  postgres:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
    - ./database/data:/var/lib/postgresql/data # If something goes wrong with container - data would be still saved in local machine inside of db/data

  # # DATABASE - GUI
  # postgres_admin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env
  #   ports:
  #     - "15432:80"

  # DATABASE - Caching
  redis:
    image: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data # Same as for postgres
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD" # Passwords taken from .env

  # API
  api:
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./public/uploads:/usr/src/app/public/uploads
      - .:/usr/src/app # Any change to base folder should be reflected.
      - /usr/src/app/node_modules # Take node_modules from docker container.
    command: npm run start:dev # Overrides CMD from Dockerfile